# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/README.html#stages

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:3.9

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

stages:          # List of stages for jobs, and their order of execution
  - setup
  - build
  - test
  - publish

setup-job:
  stage: setup
  script:
    - pip install pytest pylint

build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - echo "building sdist"
    - python setup.py sdist
    - ls 
    - echo "installing from sdist"
    - python -m pip install ./dist/*


estimator-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  allow_failure: true
  script:
    - echo "Testing estimators..."
    - python -m pytest test/test_estimators.py

smoke-test-job:   # This job also runs in the test stage.
  stage: test    # It can run at the same time as unit-test-job (in parallel).
  script:
    - echo "Smoke test whole package..."
    - python test/smoke_test.py

lint-test-job:
  stage: test
  allow_failure: true
  script:
    - pylint fuzzy_water_clustering

publish-job:      # This job runs in the deploy stage.
  stage: publish  # It only runs when *both* jobs in the test stage complete successfully.
  rules: # only publish new package on merge on master (default) branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

  script:
    - pip install twine
    - python setup.py sdist bdist_wheel
    - TWINE_PASSWORD=${CI_JOB_TOKEN} TWINE_USERNAME=gitlab-ci-token python -m twine upload --repository-url ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi dist/*


